"""empty message

Revision ID: 4534f9a0ab7c
Revises: 
Create Date: 2024-10-31 17:27:56.931494

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4534f9a0ab7c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('fname', sa.String(length=64), nullable=False),
    sa.Column('lname', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fs_uniquifier')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('reglogs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regid', sa.Integer(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['regid'], ['registrations.regid'], ),
    sa.ForeignKeyConstraint(['userid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('registrations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('invoice_number', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('invoice_paid', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('invoice_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('invoice_payment_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('invoice_canceled', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('invoice_status', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('refund_check_num', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('city', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('state_province', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('zip', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('country', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('phone', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('email', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('invoice_email', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('atd_paid', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('atd_pay_type', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('paypal_donation', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('paypal_donation_amount', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('early_on', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('onsite_contact_name', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('onsite_contact_sca_name', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('onsite_contact_kingdom', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('onsite_contact_group', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('offsite_contact_name', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('offsite_contact_phone', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('signature', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('prereg_date_time', sa.DateTime(), nullable=True))
        batch_op.alter_column('fname',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
        batch_op.alter_column('lname',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
        batch_op.alter_column('scaname',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('kingdom',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('event_ticket',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('rate_mbr',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('rate_age',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('rate_date',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('lodging',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('pay_type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('prereg_status',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('mbr_num_exp',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('requests',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_registrations_reg_date_time'), ['reg_date_time'], unique=False)
        batch_op.drop_column('mbr_exp')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('registrations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('mbr_exp', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_registrations_reg_date_time'))
        batch_op.alter_column('requests',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('mbr_num_exp',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('prereg_status',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('pay_type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('lodging',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('rate_date',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('rate_age',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('rate_mbr',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('event_ticket',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('kingdom',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('scaname',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('lname',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('fname',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.drop_column('prereg_date_time')
        batch_op.drop_column('signature')
        batch_op.drop_column('offsite_contact_phone')
        batch_op.drop_column('offsite_contact_name')
        batch_op.drop_column('onsite_contact_group')
        batch_op.drop_column('onsite_contact_kingdom')
        batch_op.drop_column('onsite_contact_sca_name')
        batch_op.drop_column('onsite_contact_name')
        batch_op.drop_column('early_on')
        batch_op.drop_column('paypal_donation_amount')
        batch_op.drop_column('paypal_donation')
        batch_op.drop_column('atd_pay_type')
        batch_op.drop_column('atd_paid')
        batch_op.drop_column('invoice_email')
        batch_op.drop_column('email')
        batch_op.drop_column('phone')
        batch_op.drop_column('country')
        batch_op.drop_column('zip')
        batch_op.drop_column('state_province')
        batch_op.drop_column('city')
        batch_op.drop_column('refund_check_num')
        batch_op.drop_column('invoice_status')
        batch_op.drop_column('invoice_canceled')
        batch_op.drop_column('invoice_payment_date')
        batch_op.drop_column('invoice_date')
        batch_op.drop_column('invoice_paid')
        batch_op.drop_column('invoice_number')

    op.drop_table('user_roles')
    op.drop_table('reglogs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
